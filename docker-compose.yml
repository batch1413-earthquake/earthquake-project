version: "3"
services:
  postgres:
    image: postgres:14
    healthcheck:
      test: ["CMD", "pg_isready -d db -U airflow"]
      interval: 5s
      retries: 5
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./database/:/var/lib/postgresql/data
    ports:
      - 5433:5432

  scheduler:
    build: .
    command: poetry run airflow scheduler
    depends_on:
      - postgres
    restart: on-failure
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./dags:/app/airflow/dags
      - ./logs:/app/airflow/logs
      - ./data:/app/airflow/data

  webserver:
    build: .
    command: poetry run scripts/entrypoint.sh
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - postgres
      - scheduler
    restart: on-failure
    healthcheck:
      test: ["CMD", "-f", "/home/airflow/airflow-webserver.pid"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./dags:/app/airflow/dags
      - ./logs:/app/airflow/logs
      - ./data:/app/airflow/data
    ports:
      - 8080:8080
